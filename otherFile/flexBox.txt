<div class="testingFlexBox">    
  <div>1</div>
  <div>2</div>
  <div>3</div>
  <div>4</div>
</div>

.testingFlexBox { 
  display: flex;
  justify-content: Выравнивание элементов по горизонтали 
    flex-start; Элементы вначале колонки
    flex-end; Элементы вконце колонки  
    center; В центре
    space-between; Первый и последний элемент максимально прижаты по краям, а отступы между элементами    распределяются равномерно

    space-around; Отступы от краев половина от отступов между элементами
    space-evenly; Отступы одинаковые везде    

  align-items: Выравнивание по вертикале, но это свойтсво естественно будет работать если у родителя будет фиксированаая высота
    flex-start; Элементы выравнятся по вертикале сверху
    center; По центру
    flex-end; В конце
    baseline; Выравнятся по их базовой линии 
    stretch; Элементы растягиваются на весь контенер и это значение по умолчанию

  flex-direction: Направление элементов 
    row; Стандартное направление слева направо

    row-reverse; Наоборот справо на лево, и смотри если направление оси поменялось, то у свойства justify-content направление тоже поменяется, например его flex-start будет начинаться с права, а flex-end будет с слева 

    column; Элементы становятся вертикально, то и свойство justify-content и align-items тоже поменятеся, justify-content будет отвечать за выравнивание по вертикали со значениями (space-around, space-between и т.д.), а align-items будет выравнивать по горизонтали

    column-reverse; Вертикально и в обратном порядке, и смотри если направление оси поменялось, то у свойства align-items направление тоже поменяется, например его flex-start будет начинаться снизу, а flex-end будет сверху 
}

Приоритет flex элементов, приоритет идет слева на право, с лева самое меньшее число, с права самое большое
div:nth-child(1) {
  order: 1; У Элемента приоритет стал выше чем у остальных и встал в самый конец ряда, так как подефолту значение установлено 0
}
div:nth-child(3) {
  order: -1; У последнего элемента приоритет стал самым низким, и он переместился в самое начало ряда
}
Html структура такие манипуляции никак не трогают
Так же можем для каждого элемента установить свой приоритет
div:nth-child(1) {
  order: 2;
}
div:nth-child(2) {
  order: 3;
}
div:nth-child(3) {
  order: 1;
}
И помни что flex-direction так же меняет значение 

